// Generated by CoffeeScript 1.6.3
(function() {
  var Schema, WorkerSchema, genUUID, mongoose, schemaStructure, timestamps, _;

  mongoose = require("mongoose");

  Schema = mongoose.Schema;

  _ = require('underscore');

  timestamps = require("mongoose-times");

  schemaStructure = {
    name: String,
    desc: String,
    count_success: {
      type: Number,
      "default": 0
    },
    count_failure: {
      type: Number,
      "default": 0
    },
    consumer_secret: String
  };

  genUUID = function(a) {
    if (a) {
      return (0 | Math.random() * 16).toString(16);
    } else {
      return ("" + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/1|0/g, genUUID);
    }
  };

  WorkerSchema = new Schema(schemaStructure);

  WorkerSchema.plugin(timestamps, {
    created: "created_at",
    lastUpdated: "updated_at"
  });

  WorkerSchema.path('name').validate(function(val) {
    return val.length;
  }, 'Name cannot be blank');

  WorkerSchema.path('desc').validate(function(val) {
    return val.length;
  }, 'Desc cannot be blank');

  WorkerSchema.pre('save', function(next) {
    var _this = this;
    if (!this.isNew) {
      return next();
    }
    mongoose.model('Worker').findOne({
      name: this.name
    }, function(err, worker) {
      if (err != null) {
        return next(err);
      }
      if (worker != null) {
        return next(new Error("worker " + _this.name + " already exist"));
      }
      _this.consumer_secret = genUUID();
      next();
    });
  });

  mongoose.model('Worker', WorkerSchema);

}).call(this);
