// Generated by CoffeeScript 1.6.3
(function() {
  var STATUS, Schema, TicketSchema, mongoose, timestamps, _;

  mongoose = require("mongoose");

  Schema = mongoose.Schema;

  _ = require('underscore');

  timestamps = require("mongoose-times");

  STATUS = require("../enums/ticket_status");

  TicketSchema = new Schema({
    title: String,
    owner_id: String,
    status: {
      type: String,
      "default": STATUS.PENDING
    },
    content: Schema.Types.Mixed,
    comments: [
      {
        name: String,
        type: String,
        body: String,
        date: Date
      }
    ]
  });

  TicketSchema.plugin(timestamps, {
    created: "created_at",
    lastUpdated: "updated_at"
  });

  UserSchema.path('title').validate(function(title) {
    return title.length;
  }, 'Title cannot be blank');

  UserSchema.path('owner_id').validate(function(owner_id) {
    return owner_id.length;
  }, 'Owner id cannot be blank');

  TicketSchema.methods = {
    complete: function(callback) {
      this.status = STATUS.COMPLETE;
      this.save(callback);
    },
    abandon: function(callback) {
      this.status = STATUS.ABANDON;
      this.save(callback);
    },
    appendLog: function(name, type, body, callback) {
      if (typeof log === "undefined" || log === null) {
        return callback("missing log content");
      }
      this.log.push({
        name: name,
        type: type,
        body: body,
        date: Date.now()
      });
      this.save(callback);
    }
  };

  mongoose.model('Ticket', TicketSchema);

}).call(this);
