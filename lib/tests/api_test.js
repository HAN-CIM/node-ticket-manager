// Generated by CoffeeScript 1.6.3
/*
# test for api
*/


(function() {
  var HOST, TIMESTAMP, request, should;

  should = require("should");

  request = require("request");

  HOST = "http://localhost:3456";

  TIMESTAMP = Date.now();

  describe("test api", function() {
    before(function() {});
    describe("/api/tickets/new", function() {
      var path;
      path = "/api/tickets/new";
      it("should create ticket", function(done) {
        var options, owner, title;
        title = "title of ticket " + TIMESTAMP;
        owner = "admin";
        options = {
          method: 'POST',
          url: "" + HOST + path,
          json: {
            title: title,
            owner_id: owner,
            category: "test api",
            content: {
              detailed: "content of ticket",
              mixed: ["data"]
            }
          }
        };
        return request(options, function(err, res, body) {
          should.not.exist(err);
          should.exist(res);
          res.statusCode.should.eql(200);
          should.exist(body);
          body.title.should.eql(title);
          body.owner_id.should.eql(owner);
          return done();
        });
      });
      return it("fail to create duplicate ticket", function(done) {
        var options, owner, title;
        title = "title of ticket " + TIMESTAMP;
        owner = "admin";
        options = {
          method: 'POST',
          url: "" + HOST + path,
          json: {
            title: title,
            owner_id: owner,
            category: "test api",
            content: {
              detailed: "content of ticket",
              mixed: ["data"]
            }
          }
        };
        return request(options, function(err, res, body) {
          console.log("[api_test] \n\t\terr:%j \n\t\tres:%j \n\t\tbody:%j", err, res.statusCode, body);
          should.not.exist(err);
          should.exist(res);
          res.statusCode.should.not.eql(200);
          return done();
        });
      });
    });
    return describe("/api/tickets/assign", function() {
      var path;
      path = "/api/tickets/assign";
      return it("assign ticket to worker", function(done) {
        var options;
        options = {
          method: 'PUT',
          url: "" + HOST + path,
          json: {
            worker: "test worker",
            category: "test api"
          }
        };
        return request(options, function(err, res, body) {
          console.log("[api_test] \n\t\terr:%j \n\t\tres:%j \n\t\tbody:%j", err, res.statusCode, body);
          should.not.exist(err);
          should.exist(res);
          res.statusCode.should.eql(200);
          return done();
        });
      });
    });
  });

}).call(this);
